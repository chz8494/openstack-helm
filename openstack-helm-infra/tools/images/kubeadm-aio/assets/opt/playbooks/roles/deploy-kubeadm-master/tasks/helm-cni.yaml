# Copyright 2017 The Openstack-Helm Authors.
#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.

- name: setting up bootstrap tiller
  block:
    - name: pull the helm tiller Image
      become: true
      become_user: root
      docker_image:
        pull: true
        name: "{{ helm.tiller_image }}"
    - name: deploying bootstrap tiller
      become: true
      become_user: root
      docker_container:
        name: "helm-tiller"
        image: "{{ helm.tiller_image }}"
        state: started
        detach: true
        recreate: yes
        network_mode: host
        volumes:
          - /etc/kubernetes/admin.conf:/etc/kubernetes/admin.conf:ro
        env:
          KUBECONFIG=/etc/kubernetes/admin.conf
      register: kubeadm_aio_tiller_container
      ignore_errors: True
    - name: wait for tiller to be ready
      delegate_to: 127.0.0.1
      command: helm version --server
      environment:
        HELM_HOST: 'localhost:44134'
      register: task_result
      until: task_result.rc == 0
      retries: 120
      delay: 5

- name: kubeadm | cni | get default mtu
  block:
    - name: getting default route device mtu
      shell: echo $(cat /sys/class/net/$(sudo ip -4 route list 0/0 | awk '{ print $5; exit }')/mtu)
      args:
        executable: /bin/bash
      register: cni_default_device_mtu

- name: kubeadm | cni | calico
  when: cluster.cni == 'calico'
  delegate_to: 127.0.0.1
  block:
    - name: kubeadm | cni | calico | label node
      command: kubectl label --overwrite nodes {{ kubeadm_node_hostname }} node-role.kubernetes.io/master=
      environment:
        KUBECONFIG: '/mnt/rootfs/etc/kubernetes/admin.conf'
    - name: kubeadm | cni | calico
      command: helm install /opt/charts/calico --name calico --namespace kube-system --set networking.podSubnet="{{ k8s.networking.podSubnet }}" --set conf.node.IP_AUTODETECTION_METHOD="can-reach={% if k8s.api.advertiseAddress is defined %}{{ k8s.api.advertiseAddress }}{% else %}{% if k8s.api.advertiseAddressDevice is defined %}{{ hostvars[inventory_hostname]['ansible_'+k8s.api.advertiseAddressDevice].ipv4.address }}{% else %}{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}{% endif %}{% endif %}" --set networking.mtu="{{ cni_default_device_mtu.stdout }}" --wait --timeout=600
      environment:
        HELM_HOST: 'localhost:44134'
    - name: kubeadm | cni | calico
      command: helm status calico
      environment:
        HELM_HOST: 'localhost:44134'
      register: kubeadm_helm_cni_status
    - name: kubeadm | cni | status
      debug:
        msg: "{{ kubeadm_helm_cni_status.stdout_lines }}"

- name: kubeadm | cni | flannel
  when: cluster.cni == 'flannel'
  delegate_to: 127.0.0.1
  block:
    - name: kubeadm | cni | flannel
      command: helm install /opt/charts/flannel --name flannel --namespace kube-system --set networking.podSubnet="{{ k8s.networking.podSubnet }}" --wait --timeout=600
      environment:
        HELM_HOST: 'localhost:44134'
    - name: kubeadm | cni | flannel
      command: helm status flannel
      environment:
        HELM_HOST: 'localhost:44134'
      register: kubeadm_helm_cni_status
    - name: kubeadm | cni | status
      debug:
        msg: "{{ kubeadm_helm_cni_status.stdout_lines }}"

- name: "removing bootstrap tiller container"
  become: true
  become_user: root
  docker_container:
    name: "helm-tiller"
    state: absent
