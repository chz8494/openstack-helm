#jinja2: trim_blocks:False
apiVersion: kubeadm.k8s.io/v1alpha1
kind: MasterConfiguration
kubernetesVersion: {{ k8s.kubernetesVersion }}
imageRepository: {{ k8s.imageRepository }}
nodeName: {{ kubeadm_node_hostname }}
api:
  advertiseAddress: {% if k8s.api.advertiseAddress is defined %}{{ k8s.api.advertiseAddress }}{% else %}{% if k8s.api.advertiseAddressDevice is defined %}{{ hostvars[inventory_hostname]['ansible_'+k8s.api.advertiseAddressDevice].ipv4.address }}{% else %}{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}{% endif %}{% endif %}
  bindPort: {{ k8s.api.bindPort }}
# etcd:
#   endpoints:
#   - <endpoint1|string>
#   - <endpoint2|string>
#   caFile: <path|string>
#   certFile: <path|string>
#   keyFile: <path|string>
#   dataDir: <path|string>
#   extraArgs:
#     <argument>: <value|string>
#     <argument>: <value|string>
#   image: <string>
networking:
  dnsDomain: {{ k8s.networking.dnsDomain }}
  podSubnet: {{ k8s.networking.podSubnet }}
  serviceSubnet: {{ k8s.networking.serviceSubnet }}
#cloudProvider: <string>
authorizationModes:
- Node
- RBAC
token: {{ kubeadm_bootstrap_token }}
tokenTTL: 24h0m0s
selfHosted: {{ k8s.selfHosted }}
apiServerExtraArgs:
  service-node-port-range: "1024-65535"
  feature-gates: "MountPropagation=true"
controllerManagerExtraArgs:
  address: "0.0.0.0"
  port: "10252"
#   <argument>: <value|string>
schedulerExtraArgs:
  address: "0.0.0.0"
  port: "10251"
# apiServerCertSANs:
# - <name1|string>
# - <name2|string>
certificatesDir: {{ k8s.certificatesDir }}
#unifiedControlPlaneImage: <string>
